name: Build and Push Multi Docker Image

on:
  push:
    branches:
      - main  # Adjust this to your default branch
  schedule:
    - cron: '0 12 * * *'  # Executes every day at 4:00 AM Pacific Time

env:
  REGISTRY_IMAGE: niteris/fastled-wasm  # Replace with your Docker Hub username and repository

jobs:
  check-if-changed:
    runs-on: ubuntu-24.04
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check workflow repo changes
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          
      - id: check
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          # Check if there are any changes in workflow repository
          # At this point always run, this used to trigger on changes to fastled repo (mostly for the compiler stuff)
          # but that has been moved to this repo.
          echo "should_run=true" >> $GITHUB_OUTPUT
          echo "size of env.PLATFORM_PAIR: ${#PLATFORM_PAIR}"


  credentials:
    needs: check-if-changed
    if: needs.check-if-changed.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    outputs:
      docker_username: ${{ steps.credentials.outputs.docker_username }}
      registry_image: ${{ steps.credentials.outputs.registry_image }}
      docker_password: ${{ steps.credentials.outputs.docker_password }}
      platform_pair: ${{ steps.credentials.outputs.platform_pair }}
    steps:
      - name: Output encoded credentials
        id: credentials
        env:
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          registry_image: ${{ env.REGISTRY_IMAGE }}
          platform_pair: ${{ env.PLATFORM_PAIR }}
        run: |
          echo "docker_username=$(echo $docker_username | base64 -w0 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "docker_password=$(echo $docker_password | base64 -w0 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "registry_image=$(echo $registry_image | base64 -w0 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "platform_pair=$(echo $platform_pair | base64 -w0 | base64 -w0)" >> $GITHUB_OUTPUT




    
  build-amd64:
    needs: credentials
    uses: ./.github/workflows/build_docker_image_template.yml
    with:
      runs_on: ubuntu-24.04
      platform: linux/amd64
    secrets:
        env_vars: |
          docker_username=${{ needs.credentials.outputs.docker_username  }}
          docker_password=${{ needs.credentials.outputs.docker_password  }}
          docker_registry_image=${{ needs.credentials.outputs.registry_image  }}
          platform_pair=${{ needs.credentials.outputs.platform_pair  }}
          



  build-arm:
    needs: check-if-changed
    if: needs.check-if-changed.outputs.should_run == 'true'
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV          
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: https://github.com/zackees/fastled-wasm.git
          file: Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          build-args: |
            PLATFORM_TAG=${{ matrix.platform == 'linux/arm64' && '-arm64' || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max,compression=zstd
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
            name: digests-${{ env.PLATFORM_PAIR }}
            path: /tmp/digests/*
            if-no-files-found: error
            retention-days: 1
  
  merge:
    runs-on: ubuntu-24.04
    needs:
      - check-if-changed
      - build-amd64
      - build-arm
    if: needs.check-if-changed.outputs.should_run == 'true'
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
      

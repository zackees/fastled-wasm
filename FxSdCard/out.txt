Starting FastLED WASM compilation script...
Keep files flag: False
Using mapped directory: /tmp/tmp9f_em1hg
Cleaning sketch directory to ensure fresh files: /js/src
Copying files from mapped directory to container...
Copying file: /tmp/tmp9f_em1hg/wasm/FxSdCard.ino -> /js/src/FxSdCard.ino
Copying directory: /tmp/tmp9f_em1hg/wasm/data
Copying file: /tmp/tmp9f_em1hg/wasm/build_mode.txt -> /js/src/build_mode.txt
Transforming files to cpp...
Found .ino file: /js/src/FxSdCard.ino
Renaming /js/src/FxSdCard.ino to FxSdCard.ino.cpp

########################################
# Inserting headers in source files... #
########################################

Inserting header in file: /js/src/FxSdCard.ino.cpp
Processed: /js/src/FxSdCard.ino.cpp
Current directory: /js/src structure has [PosixPath('/js/src/FxSdCard.ino.cpp'), PosixPath('/js/src/data'), PosixPath('/js/src/build_mode.txt')]

############################################################
# Transform to cpp and insert header operations completed. #
############################################################


###########################################################
# Starting compilation process with mode: BuildMode.QUICK #
#   js_dir: /js                                           #
#   profile_build: False                                  #
###########################################################

Starting compilation...
Starting compilation process...

###################################
# WASM is building in mode: QUICK #
###################################


####################################################################
# Build process profiling is disabled                              #
# use --profile to get metrics on how long the build process took. #
####################################################################


#################################
# Using direct emcc compilation #
#################################

‚úì Using direct emscripten compiler calls
‚úì Build mode: QUICK
‚úì Compiler root: /js
‚úì Will use compile_sketch.py module for compilation
‚úì Direct compilation command prepared: python -m fastled_wasm_compiler.compile_sketch --sketch /js/src --mode quick
Command: python -m fastled_wasm_compiler.compile_sketch --sketch /js/src --mode quick
Command cwd: /js

##################################################################################
# Build started with command:                                                    #
#   python -m fastled_wasm_compiler.compile_sketch --sketch /js/src --mode quick #
##################################################################################

‚úì Using stdbuf to force line buffering for real-time output
0.00
üöÄ Starting FastLED sketch compilation (no-platformio mode)
0.00 üîä VERBOSE MODE: Showing detailed emcc/linker output
0.00 üìÅ Sketch directory: /js/src
0.00 üîß Build mode: quick
0.00 üìÇ Output directory: /build/quick
üöÄ Mold daemon started for faster linking
0.00 ‚úì Output directory prepared: /build/quick
0.00
üìã Source file discovery:
0.00 ‚úì Found 1 source file(s):
0.00   1. FxSdCard.ino.cpp (3371 bytes)
üîç BUILD_FLAGS STATUS: Checking primary location: src/platforms/wasm/compile/build_flags.toml
‚ö†Ô∏è  BUILD_FLAGS WARNING: Primary config not found at src/platforms/wasm/compile/build_flags.toml
‚ö†Ô∏è  BUILD_FLAGS WARNING: This is expected if using standalone FastLED WASM compiler
üîÑ BUILD_FLAGS STATUS: Falling back to package resource: build_flags.toml
‚ÑπÔ∏è  BUILD_FLAGS INFO: Using default compiler flags (this is normal for standalone usage)
üìã BUILD_FLAGS LOADED: Configuration summary
   üîß Universal defines: 8
   üîß Universal compiler flags: 11
   üìù Sketch-specific defines: 2
   üìù Sketch-specific flags: 0
   üìö Library-specific defines: 0
   üìö Library-specific flags: 2
   üéØ Build modes available: debug, fast_debug, quick, release
   üîó Linking configurations: base, sketch, library
   üêõ DWARF debug configuration: Present
   ‚ö° Strict mode flags: 11
‚úÖ BUILD_FLAGS READY: Configuration loaded and validated
0.00
üîß Compilation configuration (from build_flags.toml):
0.00 üìã CXX_FLAGS:
0.00    1. -DFASTLED_ENGINE_EVENTS_MAX_LISTENERS=50
0.00    2. -DFASTLED_FORCE_NAMESPACE=1
0.00    3. -DFASTLED_USE_PROGMEM=0
0.00    4. -DUSE_OFFSET_CONVERTER=0
0.00    5. -DGL_ENABLE_GET_PROC_ADDRESS=0
0.00    6. -D_REENTRANT=1
0.00    7. -DEMSCRIPTEN_HAS_UNBOUND_TYPE_NAMES=0
0.00    8. -DFASTLED_HAS_NETWORKING=1
0.00    9. -std=gnu++17
0.00   10. -fpermissive
0.00   11. -Wno-constant-logical-operand
0.00   12. -Wnon-c-typedef-for-linkage
0.00   13. -Werror=bad-function-cast
0.00   14. -Werror=cast-function-type
0.00   15. -fno-threadsafe-statics
0.00   16. -fno-exceptions
0.00   17. -fno-rtti
0.00   18. -pthread
0.00   19. -fpch-instantiate-templates
0.00   20. -I.
0.00   21. -Isrc
0.00   22. -Isrc/platforms/wasm/compiler
0.00   23. -I/js/src
0.00   24. -DSKETCH_COMPILE=1
0.00   25. -DFASTLED_WASM_USE_CCALL
0.00   26. -O1
0.00   27. -g0
0.00   28. --profiling-funcs
0.00   29. -fno-inline-functions
0.00   30. -fno-vectorize
0.00   31. -fno-unroll-loops
0.00   32. -fno-strict-aliasing
0.00   33. -fno-merge-constants
0.00   34. -fno-merge-all-constants
0.00   35. -fno-delayed-template-parsing
0.00   36. -fmax-type-align=4
0.00   37. -ffast-math
0.00   38. -fno-math-errno
0.00   39. -fno-exceptions
0.00   40. -fno-rtti
0.00
üìã LINK_FLAGS:
0.00    1. -fuse-ld=mold
0.00    2. -sWASM=1
0.00    3. -pthread
0.00    4. -sUSE_PTHREADS=1
0.00    5. -sPROXY_TO_PTHREAD
0.00    6. --emit-symbol-map
0.00    7. -sMODULARIZE=1
0.00    8. -sEXPORT_NAME=fastled
0.00    9. -sALLOW_MEMORY_GROWTH=1
0.00   10. -sINITIAL_MEMORY=134217728
0.00   11. -sAUTO_NATIVE_LIBRARIES=0
0.00   12. -sEXPORTED_RUNTIME_METHODS=['ccall','cwrap','stringToUTF8','UTF8ToString','lengthBytesUTF8','HEAPU8','getValue']
0.00   13. -sEXPORTED_FUNCTIONS=['_malloc','_free','_main','_extern_setup','_extern_loop','_fastled_declare_files','_getStripPixelData','_getFrameData','_getScreenMapData','_freeFrameData','_getFrameVersion','_hasNewFrameData','_js_fetch_success_callback','_js_fetch_error_callback']
0.00   14. -sEXIT_RUNTIME=0
0.00   15. -sFILESYSTEM=0
0.00   16. -Wl,--gc-sections
0.00   17. --source-map-base=http://localhost:8000/
0.00   18. -sASYNCIFY=1
0.00   19. -sASYNCIFY_STACK_SIZE=10485760
0.00   20. -sASYNCIFY_EXPORTS=['_main','_extern_setup','_extern_loop']
0.00   21. -sASYNCIFY_IMPORTS=['js_fetch_async']
0.00
üìã Sources: /js/src/FxSdCard.ino.cpp
0.00 üìã Sketch directory: /js/src
0.00 EXCLUSIVE MODE: Using regular archives only
0.00
üìö FastLED library: /build/quick/libfastled.a
0.00 ‚úì FastLED library found (3900600 bytes, regular archive)
0.00
üî® Compiling 1 source files in parallel:
0.00 ================================================================================
0.00 üîß Using 1 worker threads for parallel compilation
0.42 ‚úÖ COMPILED [1/1]: FxSdCard.ino.cpp ‚Üí FxSdCard.ino.o (success) in 0.42 seconds
0.42 üî® Build command:
0.42   /build_tools/ccache-emcxx.sh -c -x c++ -o /build/quick/FxSdCard.ino.o -DFASTLED_ENGINE_EVENTS_MAX_LISTENERS=50 -DFASTLED_FORCE_NAMESPACE=1 -DFASTLED_USE_PROGMEM=0 -DUSE_OFFSET_CONVERTER=0 -DGL_ENABLE_GET_PROC_ADDRESS=0 -D_REENTRANT=1 -DEMSCRIPTEN_HAS_UNBOUND_TYPE_NAMES=0 -DFASTLED_HAS_NETWORKING=1 -std=gnu++17 -fpermissive -Wno-constant-logical-operand -Wnon-c-typedef-for-linkage -Werror=bad-function-cast -Werror=cast-function-type -fno-threadsafe-statics -fno-exceptions -fno-rtti -pthread -fpch-instantiate-templates -I. -Isrc -Isrc/platforms/wasm/compiler -I/js/src -DSKETCH_COMPILE=1 -DFASTLED_WASM_USE_CCALL -O1 -g0 --profiling-funcs -fno-inline-functions -fno-vectorize -fno-unroll-loops -fno-strict-aliasing -fno-merge-constants -fno-merge-all-constants -fno-delayed-template-parsing -fmax-type-align=4 -ffast-math -fno-math-errno -fno-exceptions -fno-rtti -include /build/quick/fastled_pch.h /js/src/FxSdCard.ino.cpp
0.42 üîß Mode-specific flags: -O1 -g0 --profiling-funcs -fno-inline-functions -fno-vectorize -fno-unroll-loops -fno-strict-aliasing -fno-merge-constants -fno-merge-all-constants -fno-delayed-template-parsing -fmax-type-align=4 -ffast-math -fno-math-errno -fno-exceptions -fno-rtti
0.42 üöÄ PCH OPTIMIZATION: Using precompiled header fastled_pch.h
0.42     üîí Source files remain unmodified (include guards handle double inclusion)
0.42 üì§ Compiler output:
0.42 [emcc] em++: warning: linker flag ignored during compilation: '--profiling-funcs' [-Wunused-command-line-argument]
0.42 [emcc] clang++: warning: optimization flag '-fno-merge-constants' is not supported [-Wignored-optimization-argument]
0.42   ‚úì [1/1] FxSdCard.ino.cpp ‚Üí FxSdCard.ino.o (113683 bytes)
0.42 --------------------------------------------------------------------------------
0.42 ‚úÖ All 1 source files compiled successfully
0.42
üîó Linking phase - Creating final WASM output:
0.42 ================================================================================
0.42 ‚úì Linking 1 object file(s) into final output
0.42 ‚úì Total object file size: 113683 bytes
0.42 ‚ö° Linking with quick FastLED library: /build/quick/libfastled.a (regular)
0.51 üì§ Linker output:
0.51     em++: warning: ASYNCIFY_EXPORTS is deprecated (please use JSPI_EXPORTS instead). Please open a bug if you have a continuing need for this setting [-Wdeprecated]
0.51     em++: warning: -pthread + ALLOW_MEMORY_GROWTH may run non-wasm code slowly, see https://github.com/WebAssembly/design/issues/1271 [-Wpthreads-mem-growth]
3.12     warning: no output file specified, not emitting output
3.15 ‚úÖ LINKED: fastled.js (success) in 2.73 seconds
3.15 üîó Build command:
3.15   /build_tools/ccache-emcxx.sh -fuse-ld=mold -sWASM=1 -pthread -sUSE_PTHREADS=1 -sPROXY_TO_PTHREAD --emit-symbol-map -sMODULARIZE=1 -sEXPORT_NAME=fastled -sALLOW_MEMORY_GROWTH=1 -sINITIAL_MEMORY=134217728 -sAUTO_NATIVE_LIBRARIES=0 -sEXPORTED_RUNTIME_METHODS=['ccall','cwrap','stringToUTF8','UTF8ToString','lengthBytesUTF8','HEAPU8','getValue'] -sEXPORTED_FUNCTIONS=['_malloc','_free','_main','_extern_setup','_extern_loop','_fastled_declare_files','_getStripPixelData','_getFrameData','_getScreenMapData','_freeFrameData','_getFrameVersion','_hasNewFrameData','_js_fetch_success_callback','_js_fetch_error_callback'] -sEXIT_RUNTIME=0 -sFILESYSTEM=0 -Wl,--gc-sections --source-map-base=http://localhost:8000/ -sASYNCIFY=1 -sASYNCIFY_STACK_SIZE=10485760 -sASYNCIFY_EXPORTS=['_main','_extern_setup','_extern_loop'] -sASYNCIFY_IMPORTS=['js_fetch_async'] -sINITIAL_MEMORY=67108864 -sASSERTIONS=0 -sSTACK_OVERFLOW_CHECK=0 -sWASM_BIGINT=0 -sERROR_ON_UNDEFINED_SYMBOLS=0 -o /build/quick/fastled.js /build/quick/FxSdCard.ino.o /build/quick/libfastled.a
3.15 ================================================================================
3.15 ‚úÖ JavaScript output: /build/quick/fastled.js (87.0k)
3.15 ‚úÖ WebAssembly output: /build/quick/fastled.wasm (914.4k)
3.15
‚úÖ Program built at: /build/quick/fastled.js
3.15 üîä VERBOSE BUILD COMPLETED: All emcc/linker calls shown above

##################################
# Compilation process Finsished. #
##################################


Compilation successful.

Compilation return code: 0

###########################
# Compilation successful. #
###########################


###########################################
# No-PlatformIO build directory structure #
###########################################

‚úì Using direct compilation build directory: /build/quick
‚úì Build mode subdirectory: quick
‚úì Expected output files: fastled.js, fastled.wasm
‚úì Build directory exists: /build/quick

###########################
# Copying output files... #
###########################

Copying /build/quick/fastled.wasm to /tmp/tmp9f_em1hg/wasm/fastled_js/fastled.wasm
Copying /build/quick/fastled.js to /tmp/tmp9f_em1hg/wasm/fastled_js/fastled.js
Copying /build/quick/fastled.js.symbols to /tmp/tmp9f_em1hg/wasm/fastled_js/fastled.js.symbols
Copying src/platforms/wasm/compiler/index.html to output directory
Copying src/platforms/wasm/compiler/index.css to output directory
Copying files from src/platforms/wasm/compiler/modules to /tmp/tmp9f_em1hg/wasm/fastled_js/modules
Copying index.js to output directory

#######################
# Embedding data file #
#######################


#######################
# Embedding data file #
#######################


#######################
# Embedding data file #
#######################


#######################
# Embedding data file #
#######################


###############################
# Writing manifest files.json #
###############################


###############################
# No-PlatformIO Build Summary #
###############################

‚úÖ Compilation method: Direct emcc calls (bypassed PlatformIO)
‚úÖ Build mode: QUICK
‚úÖ Build directory: /build/quick
‚úÖ Source directory: /tmp/tmp9f_em1hg/wasm
‚úÖ Output directory: fastled_js
üìÅ Checking output files in /tmp/tmp9f_em1hg/wasm/fastled_js:
  ‚úÖ fastled.js (86994 bytes)
  ‚úÖ fastled.wasm (914411 bytes)
üéØ Build completed using direct emscripten compilation

################################
# Cleaning up directories:     #
#   build (/js/.pio/build) and #
#   sketch (/js/src)           #
################################


##############################################
# Compilation process completed successfully #
##############################################

